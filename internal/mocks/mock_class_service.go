// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jilani-go/glofox/internal/services (interfaces: ClassService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	models "github.com/jilani-go/glofox/internal/models"
)

// MockClassService is a mock of ClassService interface.
type MockClassService struct {
	ctrl     *gomock.Controller
	recorder *MockClassServiceMockRecorder
}

// MockClassServiceMockRecorder is the mock recorder for MockClassService.
type MockClassServiceMockRecorder struct {
	mock *MockClassService
}

// NewMockClassService creates a new mock instance.
func NewMockClassService(ctrl *gomock.Controller) *MockClassService {
	mock := &MockClassService{ctrl: ctrl}
	mock.recorder = &MockClassServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClassService) EXPECT() *MockClassServiceMockRecorder {
	return m.recorder
}

// CreateClass mocks base method.
func (m *MockClassService) CreateClass(arg0 string, arg1, arg2 time.Time, arg3 int) (models.Class, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateClass", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(models.Class)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateClass indicates an expected call of CreateClass.
func (mr *MockClassServiceMockRecorder) CreateClass(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateClass", reflect.TypeOf((*MockClassService)(nil).CreateClass), arg0, arg1, arg2, arg3)
}
